@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using PUSL2020.Domain.Enums
@model RegisterModel


@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-8">
        <form id="registerForm" asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h2>Create a new account.</h2>
            <hr/>
            <div asp-validation-summary="All" class="text-danger"></div>
            @(Html.Kendo().Wizard()
                .Name("reporter-signup")
                .Events(ev => ev.Done("onDone"))
                .Steps(s =>
                {
                    s.Add<RegisterModel.PersonalDetailsModel>()
                        .Title("Personal Information")
                        .Form(f => f
                            .Validatable(v =>
                            {
                                v.ValidateOnBlur(true);
                                v.ValidationSummary(vs => vs.Enable(false));
                            })
                            .FormData(Model.Input.PersonalDetails)
                            .Items(items =>
                            {
                                items.Add().Field(p => p.FirstName);
                                items.Add().Field(p => p.MiddleName);
                                items.Add().Field(p => p.LastName);
                                items.Add().Field(p => p.Nic);
                            })
                        )
                        .Buttons(b => { b.Next(); });
                    s.Add<RegisterModel.ContactDetailsModel>()
                        .Title("Contact details")
                        .Form(f => f
                            .Validatable(v =>
                            {
                                v.ValidateOnBlur(true);
                                v.ValidationSummary(vs => vs.Enable(false));
                            })
                            .FormData(Model.Input.ContactDetails)
                            .Items(items =>
                            {
                                items.Add().Field(p => p.Phone);
                                items.AddGroup()
                                    .Label("Address")
                                    .Layout("grid")
                                    .Items(i =>
                                    {
                                        i.Add().Field(p => p.Address.Line1).Label(l => l.Text("Building / Home / Apartment"));
                                        i.Add().Field(p => p.Address.Street).Label(l => l.Text("Street"));
                                        i.Add().Field(p => p.Address.City).Label(l => l.Text("City"));
                                        i.Add().Field(p => p.Address.District)
                                            .Editor(e =>
                                            {
                                                e.AutoComplete()
                                                    .DataTextField("Text")
                                                    .BindTo(
                                                        Enum.GetValues(typeof(District))
                                                            .Cast<District>()
                                                            .Select((t, x) => new SelectListItem(t.ToString(), x.ToString())));
                                            });
                                        i.Add().Field(p => p.Address.ZipCode).Label(l => l.Text("Zip Code"));
                                    });
                            })
                        )
                        .Buttons(b =>
                        {
                            b.Previous();
                            b.Next();
                        });
                    s.Add<RegisterModel.LoginDetailsModel>()
                        .Title("Login Details")
                        .Form(f => f
                            .Validatable(v =>
                            {
                                v.ValidateOnBlur(true);
                                v.ValidationSummary(vs => vs.Enable(false));
                            })
                            .Layout("grid")
                            .FormData(Model.Input.LoginDetails)
                            .Items(items =>
                            {
                                items.Add().Field(p => p.Email).Label(l => l.Text("Email:"));
                                items.Add().Field(p => p.Password).Label(l => l.Text("Password:")).InputHtmlAttributes(new { @type = "password" });
                                items.Add().Field(p => p.ConfirmPassword).Label(l => l.Text("Confirm Password:")).InputHtmlAttributes(new { @type = "password" });
                            })
                        )
                        .Buttons(b =>
                        {
                            b.Previous();
                            b.Done();
                        });
                })
                )
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial"/>
    <script>
        function onDone(e) {
            e.originalEvent.preventDefault();
            $("#registerForm").submit();
        }    
    </script>
}