// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PUSL2020.Infrastructure.Data;

#nullable disable

namespace PUSL2020.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PUSL2020.Application.Identity.Models.EmployeeUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("Employee_UsernameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("EmployeeUsers");
                });

            modelBuilder.Entity("PUSL2020.Application.Identity.Models.ReporterUser", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .IsUnique()
                        .HasDatabaseName("Reporter_EmailIndex")
                        .HasFilter("[NormalizedEmail] IS NOT NULL");

                    b.ToTable("ReporterUser");
                });

            modelBuilder.Entity("PUSL2020.Application.Identity.Models.WebMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("WebMaster_UsernameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("WebMasters");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Accident", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Archived")
                        .HasColumnType("datetime2");

                    b.Property<int>("Cause")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Reported")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReporterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ReporterId");

                    b.ToTable("Accidents");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Employees.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RdaOfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RdaOfficeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.ImageResource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AccidentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccidentId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Institutions.Insurance", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Insurances");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Institutions.PoliceStation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PoliceStations");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Institutions.RdaOffice", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("District")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RdaOffices");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Reporter", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReporterType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reporters");

                    b.HasDiscriminator<string>("ReporterType");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Vehicles.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FuelType")
                        .HasColumnType("int");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ReporterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Vrn")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasAlternateKey("ReporterId", "Vrn");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.CompanyReporter", b =>
                {
                    b.HasBaseType("PUSL2020.Domain.Entities.Reporter");

                    b.Property<string>("Crn")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LegalName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("Crn")
                        .IsUnique()
                        .HasFilter("[Crn] IS NOT NULL");

                    b.HasDiscriminator().HasValue("Company");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Employees.InsuranceEmployee", b =>
                {
                    b.HasBaseType("PUSL2020.Domain.Entities.Employees.Employee");

                    b.Property<Guid>("HeadOfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("HeadOfficeId");

                    b.ToTable("Insurance_Employees", (string)null);
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Employees.PoliceOfficer", b =>
                {
                    b.HasBaseType("PUSL2020.Domain.Entities.Employees.Employee");

                    b.Property<Guid>("StationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("StationId");

                    b.ToTable("Police_Officers", (string)null);
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Employees.RdaEmployee", b =>
                {
                    b.HasBaseType("PUSL2020.Domain.Entities.Employees.Employee");

                    b.Property<Guid>("OfficeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("OfficeId");

                    b.ToTable("Rda_Employees", (string)null);
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.PersonReporter", b =>
                {
                    b.HasBaseType("PUSL2020.Domain.Entities.Reporter");

                    b.Property<string>("DriverLicenseId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nic")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasIndex("DriverLicenseId")
                        .IsUnique()
                        .HasFilter("[DriverLicenseId] IS NOT NULL");

                    b.HasIndex("Nic")
                        .IsUnique()
                        .HasFilter("[Nic] IS NOT NULL");

                    b.HasDiscriminator().HasValue("Person");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Accident", b =>
                {
                    b.HasOne("PUSL2020.Domain.Entities.Reporter", "Reporter")
                        .WithMany()
                        .HasForeignKey("ReporterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PUSL2020.Domain.Entities.Vehicles.VehicleSnapshot", "Vehicle", b1 =>
                        {
                            b1.Property<Guid>("AccidentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Class")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EngineNo")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("FuelType")
                                .HasColumnType("int");

                            b1.Property<string>("Make")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Model")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("RegisteredAt")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Vrn")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AccidentId");

                            b1.ToTable("Vehicle_Snapshots", (string)null);

                            b1.WithOwner("Accident")
                                .HasForeignKey("AccidentId");

                            b1.OwnsOne("PUSL2020.Domain.Entities.Vehicles.VehicleInsurance", "Insurance", b2 =>
                                {
                                    b2.Property<Guid>("VehicleSnapshotAccidentId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<DateTime>("ExpiryAt")
                                        .HasColumnType("datetime2");

                                    b2.Property<Guid>("IssuerId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("PolicyId")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<DateTime>("StartAt")
                                        .HasColumnType("datetime2");

                                    b2.HasKey("VehicleSnapshotAccidentId");

                                    b2.HasIndex("IssuerId");

                                    b2.ToTable("Vehicle_Snapshots");

                                    b2.HasOne("PUSL2020.Domain.Entities.Institutions.Insurance", "Issuer")
                                        .WithMany()
                                        .HasForeignKey("IssuerId")
                                        .OnDelete(DeleteBehavior.Cascade)
                                        .IsRequired();

                                    b2.WithOwner()
                                        .HasForeignKey("VehicleSnapshotAccidentId");

                                    b2.Navigation("Issuer");
                                });

                            b1.OwnsOne("PUSL2020.Domain.Entities.Vehicles.VehicleOwner", "Owner", b2 =>
                                {
                                    b2.Property<Guid>("VehicleSnapshotAccidentId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Name")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Phone")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("VehicleSnapshotAccidentId");

                                    b2.ToTable("Vehicle_Snapshots");

                                    b2.WithOwner()
                                        .HasForeignKey("VehicleSnapshotAccidentId");
                                });

                            b1.Navigation("Accident");

                            b1.Navigation("Insurance")
                                .IsRequired();

                            b1.Navigation("Owner")
                                .IsRequired();
                        });

                    b.OwnsOne("PUSL2020.Domain.ValueObjects.Approval<PUSL2020.Domain.Entities.Employees.InsuranceEmployee>", "InsuranceApproval", b1 =>
                        {
                            b1.Property<Guid>("AccidentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid?>("EmployeeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool?>("IsApproved")
                                .HasColumnType("bit");

                            b1.Property<string>("Reason")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AccidentId");

                            b1.HasIndex("EmployeeId");

                            b1.ToTable("Accidents");

                            b1.WithOwner()
                                .HasForeignKey("AccidentId");

                            b1.HasOne("PUSL2020.Domain.Entities.Employees.InsuranceEmployee", "Employee")
                                .WithMany()
                                .HasForeignKey("EmployeeId");

                            b1.Navigation("Employee");
                        });

                    b.OwnsOne("PUSL2020.Domain.ValueObjects.Approval<PUSL2020.Domain.Entities.Employees.PoliceOfficer>", "PoliceApproval", b1 =>
                        {
                            b1.Property<Guid>("AccidentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid?>("EmployeeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool?>("IsApproved")
                                .HasColumnType("bit");

                            b1.Property<string>("Reason")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AccidentId");

                            b1.HasIndex("EmployeeId");

                            b1.ToTable("Accidents");

                            b1.WithOwner()
                                .HasForeignKey("AccidentId");

                            b1.HasOne("PUSL2020.Domain.Entities.Employees.PoliceOfficer", "Employee")
                                .WithMany()
                                .HasForeignKey("EmployeeId");

                            b1.Navigation("Employee");
                        });

                    b.OwnsOne("PUSL2020.Domain.ValueObjects.Approval<PUSL2020.Domain.Entities.Employees.RdaEmployee>", "RdaApproval", b1 =>
                        {
                            b1.Property<Guid>("AccidentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Guid?>("EmployeeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<bool?>("IsApproved")
                                .HasColumnType("bit");

                            b1.Property<string>("Reason")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AccidentId");

                            b1.HasIndex("EmployeeId");

                            b1.ToTable("Accidents");

                            b1.WithOwner()
                                .HasForeignKey("AccidentId");

                            b1.HasOne("PUSL2020.Domain.Entities.Employees.RdaEmployee", "Employee")
                                .WithMany()
                                .HasForeignKey("EmployeeId");

                            b1.Navigation("Employee");
                        });

                    b.OwnsOne("PUSL2020.Domain.ValueObjects.Driver", "Driver", b1 =>
                        {
                            b1.Property<Guid>("AccidentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Dln")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AccidentId");

                            b1.ToTable("Accidents");

                            b1.WithOwner()
                                .HasForeignKey("AccidentId");
                        });

                    b.OwnsOne("PUSL2020.Domain.ValueObjects.Location", "Location", b1 =>
                        {
                            b1.Property<Guid>("AccidentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("District")
                                .HasColumnType("int");

                            b1.Property<decimal?>("Latitude")
                                .HasPrecision(10, 8)
                                .HasColumnType("decimal(10,8)");

                            b1.Property<decimal?>("Longitude")
                                .HasPrecision(11, 8)
                                .HasColumnType("decimal(11,8)");

                            b1.Property<string>("Road")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AccidentId");

                            b1.ToTable("Accidents");

                            b1.WithOwner()
                                .HasForeignKey("AccidentId");
                        });

                    b.Navigation("Driver")
                        .IsRequired();

                    b.Navigation("InsuranceApproval")
                        .IsRequired();

                    b.Navigation("Location")
                        .IsRequired();

                    b.Navigation("PoliceApproval")
                        .IsRequired();

                    b.Navigation("RdaApproval")
                        .IsRequired();

                    b.Navigation("Reporter");

                    b.Navigation("Vehicle")
                        .IsRequired();
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Employees.Employee", b =>
                {
                    b.HasOne("PUSL2020.Application.Identity.Models.EmployeeUser", null)
                        .WithOne("Employee")
                        .HasForeignKey("PUSL2020.Domain.Entities.Employees.Employee", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PUSL2020.Domain.Entities.Institutions.RdaOffice", null)
                        .WithMany("Employees")
                        .HasForeignKey("RdaOfficeId");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.ImageResource", b =>
                {
                    b.HasOne("PUSL2020.Domain.Entities.Accident", null)
                        .WithMany("Photos")
                        .HasForeignKey("AccidentId");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Institutions.Insurance", b =>
                {
                    b.OwnsOne("PUSL2020.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("InsuranceId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("ZipCode")
                                .HasColumnType("int");

                            b1.HasKey("InsuranceId");

                            b1.ToTable("Insurances");

                            b1.WithOwner()
                                .HasForeignKey("InsuranceId");
                        });

                    b.Navigation("Address");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Institutions.PoliceStation", b =>
                {
                    b.OwnsOne("PUSL2020.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("PoliceStationId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("ZipCode")
                                .HasColumnType("int");

                            b1.HasKey("PoliceStationId");

                            b1.ToTable("PoliceStations");

                            b1.WithOwner()
                                .HasForeignKey("PoliceStationId");
                        });

                    b.Navigation("Address");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Institutions.RdaOffice", b =>
                {
                    b.OwnsOne("PUSL2020.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("RdaOfficeId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("ZipCode")
                                .HasColumnType("int");

                            b1.HasKey("RdaOfficeId");

                            b1.ToTable("RdaOffices");

                            b1.WithOwner()
                                .HasForeignKey("RdaOfficeId");
                        });

                    b.Navigation("Address");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Reporter", b =>
                {
                    b.HasOne("PUSL2020.Application.Identity.Models.ReporterUser", null)
                        .WithOne("Reporter")
                        .HasForeignKey("PUSL2020.Domain.Entities.Reporter", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PUSL2020.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<Guid>("ReporterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("District")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Line2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Street")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("ZipCode")
                                .HasColumnType("int");

                            b1.HasKey("ReporterId");

                            b1.ToTable("Reporters");

                            b1.WithOwner()
                                .HasForeignKey("ReporterId");
                        });

                    b.Navigation("Address")
                        .IsRequired();
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Vehicles.Vehicle", b =>
                {
                    b.HasOne("PUSL2020.Domain.Entities.Reporter", "Reporter")
                        .WithMany("Vehicles")
                        .HasForeignKey("ReporterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("PUSL2020.Domain.Entities.Vehicles.VehicleInsurance", "Insurance", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("ExpiryAt")
                                .HasColumnType("datetime2");

                            b1.Property<Guid>("IssuerId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("PolicyId")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("StartAt")
                                .HasColumnType("datetime2");

                            b1.HasKey("VehicleId");

                            b1.HasIndex("IssuerId");

                            b1.ToTable("Vehicles");

                            b1.HasOne("PUSL2020.Domain.Entities.Institutions.Insurance", "Issuer")
                                .WithMany()
                                .HasForeignKey("IssuerId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");

                            b1.Navigation("Issuer");
                        });

                    b.OwnsOne("PUSL2020.Domain.Entities.Vehicles.VehicleOwner", "Owner", b1 =>
                        {
                            b1.Property<Guid>("VehicleId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("VehicleId");

                            b1.ToTable("Vehicles");

                            b1.WithOwner()
                                .HasForeignKey("VehicleId");

                            b1.OwnsOne("PUSL2020.Domain.ValueObjects.Address", "Address", b2 =>
                                {
                                    b2.Property<Guid>("VehicleOwnerVehicleId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("City")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("District")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Line1")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Line2")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Street")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<int?>("ZipCode")
                                        .HasColumnType("int");

                                    b2.HasKey("VehicleOwnerVehicleId");

                                    b2.ToTable("Vehicles");

                                    b2.WithOwner()
                                        .HasForeignKey("VehicleOwnerVehicleId");
                                });

                            b1.Navigation("Address")
                                .IsRequired();
                        });

                    b.Navigation("Insurance")
                        .IsRequired();

                    b.Navigation("Owner")
                        .IsRequired();

                    b.Navigation("Reporter");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Employees.InsuranceEmployee", b =>
                {
                    b.HasOne("PUSL2020.Domain.Entities.Institutions.Insurance", "HeadOffice")
                        .WithMany("Employees")
                        .HasForeignKey("HeadOfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PUSL2020.Domain.Entities.Employees.Employee", null)
                        .WithOne()
                        .HasForeignKey("PUSL2020.Domain.Entities.Employees.InsuranceEmployee", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("HeadOffice");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Employees.PoliceOfficer", b =>
                {
                    b.HasOne("PUSL2020.Domain.Entities.Employees.Employee", null)
                        .WithOne()
                        .HasForeignKey("PUSL2020.Domain.Entities.Employees.PoliceOfficer", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PUSL2020.Domain.Entities.Institutions.PoliceStation", "Station")
                        .WithMany("Employees")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Station");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Employees.RdaEmployee", b =>
                {
                    b.HasOne("PUSL2020.Domain.Entities.Employees.Employee", null)
                        .WithOne()
                        .HasForeignKey("PUSL2020.Domain.Entities.Employees.RdaEmployee", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.HasOne("PUSL2020.Domain.Entities.Institutions.RdaOffice", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.PersonReporter", b =>
                {
                    b.OwnsOne("PUSL2020.Domain.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<Guid>("PersonReporterId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("First")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("FirstName");

                            b1.Property<string>("Last")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LastName");

                            b1.Property<string>("Middle")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("MiddleName");

                            b1.HasKey("PersonReporterId");

                            b1.ToTable("Reporters");

                            b1.WithOwner()
                                .HasForeignKey("PersonReporterId");
                        });

                    b.Navigation("Name")
                        .IsRequired();
                });

            modelBuilder.Entity("PUSL2020.Application.Identity.Models.EmployeeUser", b =>
                {
                    b.Navigation("Employee");
                });

            modelBuilder.Entity("PUSL2020.Application.Identity.Models.ReporterUser", b =>
                {
                    b.Navigation("Reporter");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Accident", b =>
                {
                    b.Navigation("Photos");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Institutions.Insurance", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Institutions.PoliceStation", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Institutions.RdaOffice", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("PUSL2020.Domain.Entities.Reporter", b =>
                {
                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
